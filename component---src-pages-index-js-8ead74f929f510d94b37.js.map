{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["IndexPage","title","style","maxWidth","marginBottom","Image","SEO","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"2FAAA,wDAiBeA,UAZG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,yCACA,2DACA,8DACA,yBAAKC,MAAO,CAAEC,SAAS,QAAUC,aAAa,YAC5C,kBAACC,MAAD,U,kCCZN,iDAYA,SAASC,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMR,EAAS,EAATA,MAC9BS,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBZ,MAExC,OACE,kBAAC,IAAD,CACEc,eAAgB,CACdP,QAEFP,MAAOA,EACPe,cAAeF,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASjB,GAEX,CACEkB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAR,EAAKG,oBAAL,eAAmBO,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAASjB,GAEX,CACEgB,KAAK,sBACLC,QAASN,IAEXS,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-index-js-8ead74f929f510d94b37.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>Hi people</h1>\n    <p>This is lim&apos;s blog in making</p>\n    <p>let&apos;s build something beautiful</p>\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n      <Image />\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}